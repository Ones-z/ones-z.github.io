<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>服务端性能工具 - Locust</title>
      <link href="/2023/09/07/locust/"/>
      <url>/2023/09/07/locust/</url>
      
        <content type="html"><![CDATA[<p>如何编写  <a href="https://www.locust.io/">locust</a>  脚本</p><h1 id="Locust"><a href="#Locust" class="headerlink" title="Locust"></a>Locust</h1><blockquote><p>Locust 是一个开源负载测试工具。使用 Python 代码定义用户行为，也可以仿真百万个用户。<br>Locust 是非常简单易用，分布式，用户负载测试工具。Locust 主要为网站或者其他系统进行负载测试，能测试出一个系统可以并发处理多少用户。<br>Locust 是完全基于时间的，因此单个机器支持几千个并发用户。相比其他许多事件驱动的应用，Locust 不使用回调，而是使用轻量级的处理方式 gevent。</p></blockquote><h2 id="使用locust"><a href="#使用locust" class="headerlink" title="使用locust"></a>使用locust</h2><ol><li>安装locust<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install locust</span><br></pre></td></tr></table></figure></li><li>定义测试场景<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> locust <span class="keyword">import</span> HttpUser,TaskSet,task</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">my_task</span>(<span class="title class_ inherited__">TaskSet</span>):</span><br><span class="line">    wait_time = between(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">    @task</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">my_task</span>(<span class="params">self</span>):</span><br><span class="line">        url=<span class="string">&#x27;/testcase/list?current=1&amp;pageSize=10&#x27;</span></span><br><span class="line">        res=self.client.get(url)</span><br><span class="line">        <span class="keyword">assert</span> res.status_code==<span class="number">200</span></span><br></pre></td></tr></table></figure></li><li>初始化并发策略<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">my_user</span>(<span class="title class_ inherited__">HttpUser</span>):</span><br><span class="line">    tasks=[my_task]</span><br><span class="line">    min_wait = <span class="number">500</span></span><br><span class="line">    max_wait = <span class="number">5000</span></span><br></pre></td></tr></table></figure></li><li>运行<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locust -f test.py</span><br></pre></td></tr></table></figure></li><li>打开本地页面并输入host</li></ol>]]></content>
      
      
      <categories>
          
          <category> 性能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome性能插件 - Lighthouse</title>
      <link href="/2023/09/06/plasmo/"/>
      <url>/2023/09/06/plasmo/</url>
      
        <content type="html"><![CDATA[<p>如何将  <a href="https://github.com/GoogleChrome/lighthouse">Lighthouse</a>  集成到自己的Chrome插件</p><h1 id="Lighthouse"><a href="#Lighthouse" class="headerlink" title="Lighthouse"></a>Lighthouse</h1><blockquote><p>Lighthouse是一款由Google开发的网页性能评估工具，旨在帮助开发人员检查网站的可访问性、性能和最佳实践等方面的问题。它可以通过检查页面的加载速度、页面大小、图片优化、缓存设置、JavaScript 执行时长等指标，为开发者提供详细的报告和建议，以优化网站性能。此外，Lighthouse还可以作为Chrome浏览器的扩展程序，提供实时网站分析和监测功能，帮助开发人员完善网站用户体验。</p></blockquote><h2 id="为什么选择lighthouse对网页评估性能"><a href="#为什么选择lighthouse对网页评估性能" class="headerlink" title="为什么选择lighthouse对网页评估性能"></a>为什么选择lighthouse对网页评估性能</h2><ul><li>由Google维护</li><li>综合评分：加载速度、页面大小、资源优化、缓存设置、渲染性能等多个方面</li><li>遵循Web开发的最佳实践</li><li>模拟真实的用户体验</li></ul><h2 id="使用lighthouse插件"><a href="#使用lighthouse插件" class="headerlink" title="使用lighthouse插件"></a>使用lighthouse插件</h2><ol><li>打开开发者工具</li><li>选择lighthouse Tab</li><li>点击Analyze page load</li></ol><h2 id="使用lighthouse命令行"><a href="#使用lighthouse命令行" class="headerlink" title="使用lighthouse命令行"></a>使用lighthouse命令行</h2><ol><li>确保已安装Node.js</li><li>全局安装lighthouse<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g lighthouse</span><br></pre></td></tr></table></figure></li><li>使用lighthouse<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lighthouse &lt;url&gt;</span><br></pre></td></tr></table></figure></li><li>如果url是内网才能访问，可以在命令行添加参数extraHeaders<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lighthouse &lt;url&gt; --extra-headers <span class="string">&quot;Cookie:&lt;key&gt;=&lt;value&gt;&quot;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="使用lighthouse-api"><a href="#使用lighthouse-api" class="headerlink" title="使用lighthouse api"></a>使用lighthouse api</h2><ol><li>确保安装Node.js</li><li>安装依赖lighthouse</li><li>调用lighthouse<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> puppeteer = <span class="built_in">require</span>(<span class="string">&#x27;puppeteer&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> lighthouse = <span class="built_in">require</span>(<span class="string">&#x27;lighthouse&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">URL</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line">(<span class="title function_">async</span>() =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> url = url;</span><br><span class="line">    <span class="keyword">const</span> browser = <span class="keyword">await</span> puppeteer.<span class="title function_">launch</span>(&#123;</span><br><span class="line">      <span class="attr">headless</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">defaultViewport</span>: <span class="literal">null</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> lhr = <span class="keyword">await</span> <span class="title function_">lighthouse</span>(</span><br><span class="line">      url,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">port</span>: (<span class="keyword">new</span> <span class="title function_">URL</span>(browser.<span class="title function_">wsEndpoint</span>())).<span class="property">port</span>,</span><br><span class="line">        <span class="attr">output</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">        <span class="attr">logLevel</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">await</span> browser.<span class="title function_">close</span>();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></li></ol><h1 id="Chrome-Extension"><a href="#Chrome-Extension" class="headerlink" title="Chrome Extension"></a>Chrome Extension</h1><h2 id="前端传递url和cookie"><a href="#前端传递url和cookie" class="headerlink" title="前端传递url和cookie"></a>前端传递url和cookie</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">read</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">//获取当前活动窗口的url</span></span><br><span class="line">    chrome.<span class="property">tabs</span>.<span class="title function_">query</span>(&#123; <span class="attr">active</span>: <span class="literal">true</span>, <span class="attr">currentWindow</span>: <span class="literal">true</span> &#125;, <span class="function"><span class="params">tabs</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> url = tabs[<span class="number">0</span>].<span class="property">url</span></span><br><span class="line">      <span class="comment">//获取该url所有的cookies</span></span><br><span class="line">      chrome.<span class="property">cookies</span>.<span class="title function_">getAll</span>(&#123; <span class="attr">url</span>: url &#125;, <span class="keyword">function</span> (<span class="params">cookies</span>) &#123;</span><br><span class="line">        <span class="comment">//如果cookie存在，就转换成字符串</span></span><br><span class="line">        <span class="keyword">if</span> (cookies.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">const</span> resList = cookies.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;item.name&#125;</span>=<span class="subst">$&#123;item.value&#125;</span>`</span></span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="keyword">const</span> cookie = resList.<span class="title function_">join</span>(<span class="string">&#x27;;&#x27;</span>)</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(cookie)</span><br><span class="line">          <span class="comment">//将url和cookie发送给后端处理</span></span><br><span class="line">          <span class="title function_">pushUrl</span>(&#123; <span class="attr">url</span>: url, <span class="attr">cookie</span>: cookie &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> == <span class="number">0</span>) &#123;</span><br><span class="line">              message.<span class="title function_">success</span>(<span class="string">&#x27;推送成功&#x27;</span>)</span><br><span class="line">              <span class="title function_">setId</span>(res.<span class="property">data</span>.<span class="property">data</span>)</span><br><span class="line">              <span class="title function_">queryPalso</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">              message.<span class="title function_">error</span>(res.<span class="property">data</span>.<span class="property">error</span>)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果不存在cookie，则报错并重新加载此标签</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">          message.<span class="title function_">error</span>(<span class="string">&#x27;No Cookie&#x27;</span>)</span><br><span class="line">          chrome.<span class="property">tabs</span>.<span class="title function_">reload</span>(tabs[<span class="number">0</span>].<span class="property">id</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="后端和jekins相互处理异步任务"><a href="#后端和jekins相互处理异步任务" class="headerlink" title="后端和jekins相互处理异步任务"></a>后端和jekins相互处理异步任务</h2><h3 id="透传url和cookie给jenkins"><a href="#透传url和cookie给jenkins" class="headerlink" title="透传url和cookie给jenkins"></a>透传url和cookie给jenkins</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/push&quot;</span>, <span class="keyword">async</span> (ctx) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; url, cookie &#125; = ctx.<span class="property">request</span>.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">const</span> id = <span class="keyword">await</span> <span class="title function_">save</span>(url);</span><br><span class="line">  <span class="keyword">const</span> jobParams = &#123;</span><br><span class="line">    <span class="attr">url</span>: url,</span><br><span class="line">    <span class="attr">cookie</span>: cookie,</span><br><span class="line">    <span class="attr">id</span>: id.<span class="title function_">toString</span>(),</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="title function_">buildJob</span>(<span class="string">&quot;pushInsights&quot;</span>, jobParams);</span><br><span class="line">  ctx.<span class="property">body</span> = <span class="title class_">BaseResponse</span>.<span class="title function_">success</span>(id);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="jekins透传url和cookie给后端"><a href="#jekins透传url和cookie给后端" class="headerlink" title="jekins透传url和cookie给后端"></a>jekins透传url和cookie给后端</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/run/job&quot;</span>, <span class="keyword">async</span> (ctx) =&gt; &#123;</span><br><span class="line">  <span class="comment">//获取id和url、cookie</span></span><br><span class="line">  <span class="keyword">const</span> id = ctx.<span class="property">query</span>.<span class="property">id</span>;</span><br><span class="line">  <span class="keyword">const</span> url = ctx.<span class="property">query</span>.<span class="property">url</span>;</span><br><span class="line">  <span class="keyword">const</span> cookie = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="title class_">Cookie</span>: ctx.<span class="property">query</span>.<span class="property">cookie</span> &#125;).<span class="title function_">replace</span>(</span><br><span class="line">    <span class="regexp">/&quot;/g</span>,</span><br><span class="line">    <span class="string">&#x27;\\&quot;&#x27;</span></span><br><span class="line">  );</span><br><span class="line">  <span class="comment">//调用lighthouse命令行</span></span><br><span class="line">  <span class="keyword">const</span> command = <span class="string">`lighthouse <span class="subst">$&#123;url&#125;</span> --extra-headers &quot;<span class="subst">$&#123;cookie&#125;</span>&quot; --output=json --only-categories=performance --locale=zh-CN --quiet --chrome-flags=&quot;--headless&quot;`</span>;</span><br><span class="line">  <span class="comment">//解析数据，拿到关键指标</span></span><br><span class="line">  <span class="title function_">exec</span>(command, <span class="keyword">async</span> (error, stdout) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`Error executing command: <span class="subst">$&#123;error&#125;</span>`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(stdout);</span><br><span class="line">      <span class="keyword">const</span> finalUrl = <span class="title function_">parse</span>(data, <span class="string">&quot;finalUrl&quot;</span>);</span><br><span class="line">      <span class="keyword">const</span> score = <span class="title function_">parse</span>(data, <span class="string">&quot;categories.performance.score&quot;</span>);</span><br><span class="line">      <span class="keyword">const</span> result = &#123;</span><br><span class="line">        <span class="string">&quot;first-contentful-paint&quot;</span>: <span class="title function_">parse</span>(</span><br><span class="line">          data,</span><br><span class="line">          <span class="string">&#x27;audits[&quot;first-contentful-paint&quot;]&#x27;</span></span><br><span class="line">        ),</span><br><span class="line">        <span class="string">&quot;first-meaningful-paint&quot;</span>: <span class="title function_">parse</span>(</span><br><span class="line">          data,</span><br><span class="line">          <span class="string">&#x27;audits[&quot;first-meaningful-paint&quot;]&#x27;</span></span><br><span class="line">        ),</span><br><span class="line">        <span class="string">&quot;largest-contentful-paint&quot;</span>: <span class="title function_">parse</span>(</span><br><span class="line">          data,</span><br><span class="line">          <span class="string">&#x27;audits[&quot;largest-contentful-paint&quot;]&#x27;</span></span><br><span class="line">        ),</span><br><span class="line">        <span class="string">&quot;speed-index&quot;</span>: <span class="title function_">parse</span>(data, <span class="string">&#x27;audits[&quot;speed-index&quot;]&#x27;</span>),</span><br><span class="line">        <span class="string">&quot;total-blocking-time&quot;</span>: <span class="title function_">parse</span>(data, <span class="string">&#x27;audits[&quot;total-blocking-time&quot;]&#x27;</span>),</span><br><span class="line">        <span class="string">&quot;max-potential-fid&quot;</span>: <span class="title function_">parse</span>(data, <span class="string">&#x27;audits[&quot;max-potential-fid&quot;]&#x27;</span>),</span><br><span class="line">        <span class="string">&quot;cumulative-layout-shift&quot;</span>: <span class="title function_">parse</span>(</span><br><span class="line">          data,</span><br><span class="line">          <span class="string">&#x27;audits[&quot;cumulative-layout-shift&quot;]&#x27;</span></span><br><span class="line">        ),</span><br><span class="line">        <span class="string">&quot;server-response-time&quot;</span>: <span class="title function_">parse</span>(data, <span class="string">&#x27;audits[&quot;server-response-time&quot;]&#x27;</span>),</span><br><span class="line">        <span class="attr">score</span>: score,</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">const</span> plaso = &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="built_in">parseInt</span>(id),</span><br><span class="line">        <span class="attr">url</span>: finalUrl,</span><br><span class="line">        <span class="attr">result</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(result),</span><br><span class="line">        <span class="attr">score</span>: <span class="built_in">parseInt</span>(score * <span class="number">100</span>),</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">update</span>(plaso);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 性能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
